Ext.data.JsonP.Tent_FormattingSupport({"tagname":"class","name":"Tent.FormattingSupport","autodetected":{},"files":[{"filename":"tent.js","href":"tent.html#Tent-FormattingSupport"}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-Tent.FormattingSupport","short_doc":"Allows the 'value' property of the view to be bound to a controller while\ndisplaying the 'formattedValue' in the DOM\n...","component":false,"superclasses":[],"subclasses":[],"mixedInto":["Tent.TextField","label"],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Tent.TextField' rel='Tent.TextField' class='docClass'>Tent.TextField</a></div><div class='dependency'><a href='#!/api/label' rel='label' class='docClass'>label</a></div><h4>Files</h4><div class='dependency'><a href='source/tent.html#Tent-FormattingSupport' target='_blank'>tent.js</a></div></pre><div class='doc-contents'><p>Allows the 'value' property of the view to be bound to a controller while\ndisplaying the 'formattedValue' in the DOM\nThe format() and unFormat() methods, which should be overridedn by your view class,\ndefine the data transformation between the value and formatted value\nNote that all validation will be executed against the 'value' property</p>\n</div><div class='members'></div></div>","meta":{}});