/* Mixins */
// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

/* Used for section panels which are given a css height. */
@mixin fixed-height ($height){
	position: absolute;
	height: $height;
	margin-left: 0px;
	padding-left: 0px;
	width: 100%;
	overflow-y: hidden;
}

/* 
	Used for section panels which are given a css width. 
	Width is normally provided separately as a grid style (e.g. 'span3')
*/
@mixin fixed-width {
	position: absolute;
	height: 100%;
	z-index: 1000;
	overflow-x: hidden;
}

/* Styles applied to collapse a panel */
@mixin collapsed {
	//width: 0px;
	//.panel-content {
	//	@include opacity(0);
	//}
	//overflow: hidden;
}

/* Draw the element full-screen */
@mixin maximized {
	position: fixed;
	top: 0px;
	bottom: 0px;
	left: 0px;
	right: 0px;
	z-index: 2000;
	background: white;
}

@mixin tent-rotate ($degrees, $ieNumber){
	/* 
		Extended to support IE < 9, which does not support transforms.
		The second number is the 90degree multiplier used by IE
		1 = 90deg
		2 = 180deg
		3 = 270deg
	*/
	// Expanding here (i.e. not using the Compass version) since we need to remove -ms-transform, since IE9 doubles up with filter: progid)
	-webkit-transform: rotate($degrees);
	-moz-transform: rotate($degrees);   
	-o-transform: rotate($degrees);
	transform: rotate($degrees);
	filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$ieNumber});
}




/* 
	Mixin to allow a modal panel to flex in height according to the viewport height .
	The $margin argument defines the percentage offset from the top and bottom of the viewport.
*/
@mixin flex-modal ($margin){
	top: $margin;
	bottom: $margin;
	margin-top: 0px;

	.modal-header {
		box-sizing: border-box;
		height: $modal-header-height;
	}

	.modal-body {
		box-sizing: border-box;
		top: $modal-header-height;
		position: absolute;
		bottom: $modal-footer-height;
		width: 100%;
		max-height: none;
	}

	.modal-footer {
		box-sizing: border-box;
    	position: absolute;
    	bottom: 0px;
    	width: 100%;
    	height: $modal-footer-height;
  	}

  	.tent-form, .tent-panel {
    	height: auto; // Was 100%, doesn't play well in an absolutely positioned container
    	overflow: visible;
  	}
}

@mixin vertical-align-pseudo {
	/*
		This expects markup of the form:
		<div class="vertical-align ">
			<h1>title</h1>
			<a>anchor1</a>
			<a>anchor2</a>
		</div>

		See http://tympanus.net/codrops/2013/07/14/justified-and-vertically-centered-header-elements/
	*/
	 
	text-align: justify;
	&::after {
		content: '';
		display: inline-block;
		width: 100%;
	}

	a {
		vertical-align: middle;
	}

	h1 {
		height: 100%;
	}

	h1::before {
	    content: '';
	    display: inline-block;
	    vertical-align: middle;  
	    height: 100%;
	}
}

@mixin vertical-align-table {
	/*
		This expects markup of the form:
		<div class="vertical-align-with-table">
			<a>link1</a>
		</div>
	*/
	display: table;
	width: 100%;
	box-sizing: border-box;

	a {
		vertical-align: middle;
		display: table-cell;
		float: right;
	}
}